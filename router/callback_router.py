from aiogram import Router
from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.types.callback_query import CallbackQuery
from markup import MyCallback
from fsm_state import ai_model
#–æ–±—ä—è–≤–ª–µ–Ω–∏–µ callback —Ä–æ—É—Ç–µ—Ä–∞
my_callback = Router()
#–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–¥–µ–ª–∏ –∏ –Ω–∞–∂–∞—Ç–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–π –∫–Ω–æ–ø–∫–∏, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.
@my_callback.callback_query(MyCallback.filter(F.callback == "gpt3"))
async def gpt4_callback(query: CallbackQuery, state: FSMContext):
    await query.message.answer("ü§ñ: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è —á–∞—Ç GPT-3.5 Turbo.\n–ü–∏—à–∏—Ç–µ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –∑–∞–¥–∞—á–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.‚úçÔ∏è")
    return await state.set_state(ai_model.gpt3)


@my_callback.callback_query(MyCallback.filter(F.callback == "dal2"))
async def gpt4_callback(query: CallbackQuery, state: FSMContext):
    await query.message.answer("ü§ñ: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ DALL¬∑E 2.\n–û–ø–∏—à–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å.‚úçÔ∏è")
    return await state.set_state(ai_model.dal2)
    